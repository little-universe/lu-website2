{"ast":null,"code":"import _classCallCheck from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/adbhm/workspace/animation-prototype/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adbhm/workspace/animation-prototype/src/orbit.js\";\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { tween, easing } from 'popmotion';\nimport { camelCase, clamp, cloneDeep } from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction getStyles(node, properties) {\n  if (!properties || properties.length === 0) return {};\n  var computed = window.getComputedStyle(node);\n  var styles = {};\n  properties.forEach(function (property) {\n    styles[camelCase(property)] = computed.getPropertyValue(property);\n  });\n  return styles;\n}\n\nvar nodes = {};\nexport function orbit(name, properties) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      styleState = _useState2[0],\n      setStyleState = _useState2[1];\n\n  var ref = useRef(null);\n  useLayoutEffect(function () {\n    var old = nodes[name];\n    delete nodes[name];\n    var newNode = ref.current;\n\n    if (old && newNode) {\n      // we've got a new node and old styles! So it's time to animate!\n      var newStyles = getStyles(newNode, properties);\n      var newPosition = newNode.getBoundingClientRect();\n      console.log(newPosition);\n      var translateX = old.position.left - newPosition.left;\n      var translateY = old.position.top - newPosition.top;\n\n      var oldStyles = _objectSpread({}, old.styles, {\n        transform: \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\")\n      });\n\n      console.log(\"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\"));\n      setStyleState(oldStyles);\n      tween({\n        from: oldStyles,\n        to: _objectSpread({}, newStyles, {\n          transform: \"translate(0px, 0px)\"\n        }),\n        ease: easing.easeInOut,\n        duration: 3000\n      }).start(function (v) {\n        return setStyleState(_objectSpread({}, v));\n      });\n    }\n\n    return function () {\n      nodes[name] = {\n        styles: getStyles(ref.current, properties),\n        position: ref.current.getBoundingClientRect()\n      };\n    };\n  }, []);\n  return {\n    ref: ref,\n    style: styleState\n  };\n}\nvar relevantProps = [];\nexport var Transporter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Transporter, _React$Component);\n\n  function Transporter(props) {\n    var _this;\n\n    _classCallCheck(this, Transporter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transporter).call(this, props));\n    _this.state = {\n      style: undefined,\n      currentNodeStyle: undefined,\n      placeholderStyle: {}\n    };\n    _this.childRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Transporter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          name = _this$props.name,\n          show = _this$props.show,\n          _this$props$propertie = _this$props.properties,\n          properties = _this$props$propertie === void 0 ? relevantProps : _this$props$propertie;\n\n      if (show) {\n        if (nodes[name]) {\n          // If entry already exists, transform from it\n          console.warn('node already exists');\n          var oldNode = nodes[name];\n          var newNode = {\n            styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n            position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n          };\n          console.warn('transforming from', oldNode, 'to', newNode);\n          var translateX = oldNode.position.left - newNode.position.left;\n          var translateY = oldNode.position.top - newNode.position.top;\n          var scaleX = clamp(oldNode.position.width / newNode.position.width, 0, 1000) || 0;\n          var scaleY = clamp(oldNode.position.height / newNode.position.height, 0, 1000) || 0;\n\n          var oldStyles = _objectSpread({}, oldNode.styles, {\n            transform: \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px) scale(\").concat(scaleX, \", \").concat(scaleY, \")\")\n          });\n\n          tween({\n            from: oldStyles,\n            to: _objectSpread({}, newNode.styles, {\n              transform: \"translate(0px, 0px) scale(1, 1)\"\n            }),\n            ease: easing.easeInOut,\n            duration: 1000\n          }).start({\n            update: function update(v) {\n              _this2.setState({\n                anim: 'showing',\n                style: _objectSpread({}, v, {\n                  position: 'fixed'\n                })\n              });\n            },\n            complete: function complete() {\n              nodes[name] = {\n                styles: getStyles(ReactDOM.findDOMNode(_this2.childRef.current), properties),\n                position: ReactDOM.findDOMNode(_this2.childRef.current).getBoundingClientRect()\n              };\n\n              _this2.setState({\n                anim: 'shown',\n                style: {},\n                placeholderStyle: {},\n                currentNodeStyle: nodes[name]\n              });\n            }\n          });\n        }\n\n        nodes[name] = {\n          // Set entry in nodes object\n          styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n          position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n        };\n        console.warn('setting dom node', name, nodes[name]);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          show = _this$props2.show,\n          name = _this$props2.name,\n          children = _this$props2.children,\n          _this$props2$properti = _this$props2.properties,\n          properties = _this$props2$properti === void 0 ? relevantProps : _this$props2$properti;\n\n      if (prevProps.show !== show) {\n        if (show) {\n          if (nodes[name]) {\n            console.warn('previous node exists, showing');\n            this.setState({\n              anim: 'showing'\n            });\n            var old = nodes[name];\n            var currentRef = ReactDOM.findDOMNode(this.childRef.current);\n            var newStyles = getStyles(currentRef, properties);\n            var newPosition = currentRef.getBoundingClientRect(); // Is it ok to clamp old and new position to positive values? Is there any reason we would want negative ones?\n\n            var translateX = clamp(old.position.left, 0) - clamp(newPosition.left, 0);\n            var translateY = clamp(old.position.top, 0) - clamp(newPosition.top, 0);\n            var scaleX = clamp(old.position.width / newPosition.width, 0, 1000) || 0;\n            console.warn(name, old.position.height, newPosition.height, clamp(old.position.height / newPosition.height, 0, 1) || 0);\n            var scaleY = clamp(old.position.height / newPosition.height, 0, 1000) || 0;\n            console.warn(name, old.position.width, newPosition.width, clamp(old.position.width / newPosition.width, 0, 1) || 0);\n            console.warn(name, 'old', old.position, 'new', newPosition, scaleX, scaleY);\n\n            var oldStyles = _objectSpread({}, old.styles, {\n              transform: \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px) scale(\").concat(scaleX, \", \").concat(scaleY, \")\") // Change the size/position of the new element, move and scale it from position/size of old element to normal\n\n            });\n\n            tween({\n              from: oldStyles,\n              to: _objectSpread({}, newStyles, {\n                transform: \"translate(0px, 0px) scale(1, 1)\"\n              }),\n              ease: easing.easeInOut,\n              duration: 1000\n            }).start({\n              update: function update(v) {\n                _this3.setState({\n                  style: _objectSpread({}, v, {\n                    top: newPosition.top,\n                    left: newPosition.left,\n                    position: 'fixed',\n                    // minWidth: null,\n                    // maxWidth: null,\n                    margin: 0\n                  })\n                });\n              },\n              complete: function complete() {\n                // debugger\n                var node = {\n                  styles: getStyles(ReactDOM.findDOMNode(_this3.childRef.current), properties),\n                  position: ReactDOM.findDOMNode(_this3.childRef.current).getBoundingClientRect()\n                };\n                console.warn('setting node', name, node);\n                nodes[name] = node;\n\n                _this3.setState({\n                  anim: 'shown',\n                  style: {},\n                  placeholderStyle: {},\n                  currentNodeStyle: nodes[name]\n                });\n              }\n            }); // Change size of placeholder (make it bigger!)\n\n            var expectedSize = {\n              height: \"\".concat(newPosition.height, \"px\"),\n              width: \"\".concat(newPosition.width, \"px\")\n            };\n            tween({\n              from: {\n                height: \"\".concat(newPosition.height, \"px\"),\n                width: \"\".concat(newPosition.width, \"px\"),\n                transform: \"scale(0, 0)\"\n              },\n              to: {\n                transform: \"scale(1, 1)\"\n              },\n              ease: easing.easeInOut,\n              duration: 1000\n            }).start({\n              update: function update(v) {\n                _this3.setState({\n                  placeholderStyle: _objectSpread({}, v, expectedSize)\n                });\n              },\n              complete: function complete() {\n                _this3.setState({\n                  placeholderStyle: {}\n                });\n              }\n            });\n          } else {\n            console.warn('this is the first time node is present');\n            this.setState({\n              anim: 'shown'\n            });\n          }\n\n          nodes[name] = {\n            styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n            position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n          };\n          return this.setState({\n            currentNodeStyle: nodes[name]\n          });\n        }\n\n        console.warn('showing', show, nodes[name], this.state.currentNodeStyle);\n\n        if (!show && nodes[name] && this.state.currentNodeStyle && this.state.currentNodeStyle.position) {\n          this.setState({\n            anim: 'hiding'\n          });\n          var _this$state$currentNo = this.state.currentNodeStyle.position,\n              height = _this$state$currentNo.height,\n              width = _this$state$currentNo.width;\n          console.warn('transforming?', name, {\n            height: height,\n            width: width\n          }); // Animate style of phantom (shrink to nothing)\n\n          tween({\n            from: {\n              height: \"\".concat(height, \"px\"),\n              width: \"\".concat(width, \"px\"),\n              transform: \"scale(1, 1)\"\n            },\n            to: {\n              transform: \"scale(0, 0)\"\n            },\n            ease: easing.easeInOut,\n            duration: 1000\n          }).start({\n            update: function update(v) {\n              _this3.setState({\n                placeholderStyle: _objectSpread({}, v)\n              });\n            },\n            complete: function complete() {\n              _this3.setState({\n                placeholderStyle: {},\n                style: {},\n                anim: null\n              });\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          show = _this$props3.show,\n          name = _this$props3.name;\n      var _this$state = this.state,\n          anim = _this$state.anim,\n          placeholderStyle = _this$state.placeholderStyle;\n      var child = React.cloneElement(children, {\n        ref: this.childRef\n      });\n\n      if (anim === 'showing') {\n        var _child = React.cloneElement(children, {\n          ref: this.childRef,\n          style: _objectSpread({}, this.props.children.props.style, this.state.style)\n        });\n\n        return React.createElement(React.Fragment, null, _child, React.createElement(\"div\", {\n          style: _objectSpread({}, placeholderStyle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }));\n      }\n\n      if (anim === 'hiding') {\n        return React.createElement(\"div\", {\n          style: _objectSpread({}, this.state.placeholderStyle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        });\n      }\n\n      return show ? child : null;\n    }\n  }]);\n\n  return Transporter;\n}(React.Component);","map":{"version":3,"sources":["/Users/adbhm/workspace/animation-prototype/src/orbit.js"],"names":["useEffect","useLayoutEffect","useRef","useState","tween","easing","camelCase","clamp","cloneDeep","React","ReactDOM","getStyles","node","properties","length","computed","window","getComputedStyle","styles","forEach","property","getPropertyValue","nodes","orbit","name","styleState","setStyleState","ref","old","newNode","current","newStyles","newPosition","getBoundingClientRect","console","log","translateX","position","left","translateY","top","oldStyles","transform","from","to","ease","easeInOut","duration","start","v","style","relevantProps","Transporter","props","state","undefined","currentNodeStyle","placeholderStyle","childRef","createRef","show","warn","oldNode","findDOMNode","scaleX","width","scaleY","height","update","setState","anim","complete","prevProps","prevState","snapshot","children","currentRef","margin","expectedSize","child","cloneElement","Component"],"mappings":"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","sourcesContent":["import { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { tween, easing } from 'popmotion'\nimport { camelCase, clamp, cloneDeep } from 'lodash'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nfunction getStyles(node, properties) {\n  if (!properties || properties.length === 0) return {}\n  let computed = window.getComputedStyle(node)\n  let styles = {}\n  properties.forEach((property) => {\n    styles[camelCase(property)] = computed.getPropertyValue(property)\n  })\n  return styles\n}\n\nlet nodes = {}\n\nexport function orbit(name, properties) {\n  let [styleState, setStyleState] = useState({})\n  let ref = useRef(null)\n\n  useLayoutEffect(() => {\n    let old = nodes[name]\n    delete nodes[name]\n\n    let newNode = ref.current\n\n    if (old && newNode) { // we've got a new node and old styles! So it's time to animate!\n      let newStyles = getStyles(newNode, properties)\n      let newPosition = newNode.getBoundingClientRect()\n\n      console.log(newPosition)\n\n      let translateX = old.position.left - newPosition.left\n      let translateY = old.position.top - newPosition.top\n\n      let oldStyles = {\n        ...old.styles,\n        transform: `translate(${translateX}px, ${translateY}px)`\n      }\n\n      console.log(`translate(${translateX}px, ${translateY}px)`)\n\n      setStyleState(oldStyles)\n\n      tween({\n        from: oldStyles,\n        to: {\n          ...newStyles,\n          transform: `translate(0px, 0px)`\n        },\n        ease: easing.easeInOut,\n        duration: 3000\n      }).start((v) => setStyleState({ ...v }))\n    }\n    return () => {\n      nodes[name] = {\n        styles: getStyles(ref.current, properties),\n        position: ref.current.getBoundingClientRect()\n      }\n    }\n  }, [])\n\n  return {\n    ref,\n    style: styleState\n  }\n}\n\nconst relevantProps = []\n\nexport class Transporter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      style: undefined,\n      currentNodeStyle: undefined,\n      placeholderStyle: {}\n    }\n    this.childRef = React.createRef()\n  }\n  componentDidMount() {\n    const { name, show, properties = relevantProps } = this.props\n    if (show) {\n      if (nodes[name]) { // If entry already exists, transform from it\n        console.warn('node already exists')\n        const oldNode = nodes[name]\n        const newNode = {\n          styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n          position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n        }\n        console.warn('transforming from', oldNode, 'to', newNode)\n        const translateX = oldNode.position.left - newNode.position.left\n        const translateY = oldNode.position.top - newNode.position.top\n        const scaleX = clamp(oldNode.position.width / newNode.position.width, 0, 1000) || 0\n        const scaleY = clamp(oldNode.position.height / newNode.position.height, 0, 1000) || 0\n        const oldStyles = {\n          ...oldNode.styles,\n          transform: `translate(${translateX}px, ${translateY}px) scale(${scaleX}, ${scaleY})`\n        }\n\n        tween({\n          from: oldStyles,\n          to: {\n            ...newNode.styles,\n            transform: `translate(0px, 0px) scale(1, 1)`\n          },\n          ease: easing.easeInOut,\n          duration: 1000\n        }).start({\n          update: (v) => {\n            this.setState({ anim: 'showing', style: { ...v, position: 'fixed' } })\n          },\n          complete: () => {\n            nodes[name] = {\n              styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n              position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n            }\n            this.setState({ anim: 'shown', style: {}, placeholderStyle: {}, currentNodeStyle: nodes[name] })\n          }\n        })\n      }\n      nodes[name] = { // Set entry in nodes object\n        styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n        position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n      }\n      console.warn('setting dom node', name, nodes[name])\n    }\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { show, name, children, properties = relevantProps } = this.props\n    if (prevProps.show !== show) {\n      if (show) {\n        if (nodes[name]) {\n          console.warn('previous node exists, showing')\n          this.setState({ anim: 'showing' })\n          const old = nodes[name]\n          const currentRef = ReactDOM.findDOMNode(this.childRef.current)\n          let newStyles = getStyles(currentRef, properties)\n          let newPosition = currentRef.getBoundingClientRect()\n\n          // Is it ok to clamp old and new position to positive values? Is there any reason we would want negative ones?\n          let translateX = clamp(old.position.left, 0) - clamp(newPosition.left, 0)\n          let translateY = clamp(old.position.top, 0) - clamp(newPosition.top, 0)\n          const scaleX = clamp(old.position.width / newPosition.width, 0, 1000) || 0\n          console.warn(name, old.position.height, newPosition.height, clamp(old.position.height / newPosition.height, 0, 1) || 0)\n          const scaleY = clamp(old.position.height / newPosition.height, 0, 1000) || 0\n          console.warn(name, old.position.width, newPosition.width, clamp(old.position.width / newPosition.width, 0, 1) || 0)\n          console.warn(name, 'old', old.position, 'new', newPosition, scaleX, scaleY)\n\n          let oldStyles = {\n            ...old.styles,\n            transform: `translate(${translateX}px, ${translateY}px) scale(${scaleX}, ${scaleY})`\n          }\n\n          // Change the size/position of the new element, move and scale it from position/size of old element to normal\n          tween({\n            from: oldStyles,\n            to: {\n              ...newStyles,\n              transform: `translate(0px, 0px) scale(1, 1)`\n            },\n            ease: easing.easeInOut,\n            duration: 1000\n          }).start({\n            update: (v) => {\n              this.setState({\n                style: {\n                  ...v, top: newPosition.top,\n                  left: newPosition.left,\n                  position: 'fixed',\n                  // minWidth: null,\n                  // maxWidth: null,\n                  margin: 0\n                }\n              })\n            },\n            complete: () => {\n              // debugger\n              const node = {\n                styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n                position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n              }\n              console.warn('setting node', name, node)\n              nodes[name] = node\n              this.setState({ anim: 'shown', style: {}, placeholderStyle: {}, currentNodeStyle: nodes[name] })\n            }\n          })\n\n          // Change size of placeholder (make it bigger!)\n          const expectedSize = {\n            height: `${newPosition.height}px`,\n            width: `${newPosition.width}px`\n          }\n          tween({\n            from: {\n              height: `${newPosition.height}px`,\n              width: `${newPosition.width}px`,\n              transform: `scale(0, 0)`\n            },\n            to: {\n              transform: `scale(1, 1)`\n            },\n            ease: easing.easeInOut,\n            duration: 1000\n          }).start({\n            update: (v) => {\n              this.setState({ placeholderStyle: {...v, ...expectedSize },  })\n            },\n            complete: () => {\n              this.setState({ placeholderStyle: {} })\n            }\n          })\n        } else {\n          console.warn('this is the first time node is present')\n          this.setState({ anim: 'shown' })\n        }\n        nodes[name] = {\n          styles: getStyles(ReactDOM.findDOMNode(this.childRef.current), properties),\n          position: ReactDOM.findDOMNode(this.childRef.current).getBoundingClientRect()\n        }\n        return this.setState({ currentNodeStyle: nodes[name] })\n      }\n      console.warn('showing', show, nodes[name], this.state.currentNodeStyle)\n      if (!show && nodes[name] && this.state.currentNodeStyle && this.state.currentNodeStyle.position) {\n        this.setState({ anim: 'hiding' })\n        const { height, width } = this.state.currentNodeStyle.position\n        console.warn('transforming?', name, {height, width})\n        // Animate style of phantom (shrink to nothing)\n        tween({\n          from: {\n            height: `${height}px`,\n            width: `${width}px`,\n            transform: `scale(1, 1)`\n          },\n          to: {\n            transform: `scale(0, 0)`\n          },\n          ease: easing.easeInOut,\n          duration: 1000\n        }).start({\n          update: (v) => {\n            this.setState({ placeholderStyle: { ...v } })\n          },\n          complete: () => {\n            this.setState({ placeholderStyle: {}, style: {}, anim: null })\n          }\n        })\n      }\n    }\n  }\n\n  render() {\n    const { children, show, name } = this.props\n    const { anim, placeholderStyle } = this.state\n    const child = React.cloneElement(children, {\n      ref: this.childRef\n    })\n\n    if (anim === 'showing') {\n      const child = React.cloneElement(children, {\n        ref: this.childRef,\n        style: { ...this.props.children.props.style, ...this.state.style}\n      })\n      return (\n        <>\n          {child}\n          <div style={{ ...placeholderStyle }}></div>\n        </>\n      )\n    }\n    if (anim === 'hiding') {\n      return <div style={{ ...this.state.placeholderStyle}}></div>\n    }\n    return (\n      show ? child : null\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}